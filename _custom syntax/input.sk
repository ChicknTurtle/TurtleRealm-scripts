
event "input.jump":
    patterns:
        [on] [key] (jump|space) [key] (press[ed]|push[ed]|input[ted])
    event-values: player
event "input.sneak":
    patterns:
        [on] [key] (sneak|shift) [key] (press[ed]|push[ed]|input[ted])
    event-values: player
event "input.sprint":
    patterns:
        [on] [key] (sprint|control|ctrl) [key] (press[ed]|push[ed]|input[ted])
    event-values: player
event "input.forward":
    patterns:
        [on] [key] (forward[s]|w) [key] (press[ed]|push[ed]|input[ted])
    event-values: player
event "input.backward":
    patterns:
        [on] [key] (backward[s]|s) [key] (press[ed]|push[ed]|input[ted])
    event-values: player
event "input.left":
    patterns:
        [on] [key] (left|a) [key] (press[ed]|push[ed]|input[ted])
    event-values: player
event "input.right":
    patterns:
        [on] [key] (right|d) [key] (press[ed]|push[ed]|input[ted])
    event-values: player

condition:
    patterns:
        %player% is (pressing|pushing|holding) (jump|space) [key]
        %player% has (jump|space) [key] (pressed|pushed|held)
    check:
        if metadata value "_input.jump" of expr-1 is true:
            continue
condition:
    patterns:
        %player% is (pressing|pushing|holding) (sneak|shift) [key]
        %player% has (sneak|shift) [key] (pressed|pushed|held)
    check:
        if metadata value "_input.sneak" of expr-1 is true:
            continue
condition:
    patterns:
        %player% is (pressing|pushing|holding) (sprint|control|ctrl) [key]
        %player% has (sprint|control|ctrl) [key] (pressed|pushed|held)
    check:
        if metadata value "_input.sprint" of expr-1 is true:
            continue
condition:
    patterns:
        %player% is (pressing|pushing|holding) (forward[s]|w) [key]
        %player% has (forward[s]|w) [key] (pressed|pushed|held)
    check:
        if metadata value "_input.forward" of expr-1 is true:
            continue
condition:
    patterns:
        %player% is (pressing|pushing|holding) (backward[s]|s) [key]
        %player% has (backward[s]|s) [key] (pressed|pushed|held)
    check:
        if metadata value "_input.backward" of expr-1 is true:
            continue
condition:
    patterns:
        %player% is (pressing|pushing|holding) (left|a) [key]
        %player% has (left|a) [key] (pressed|pushed|held)
    check:
        if metadata value "_input.left" of expr-1 is true:
            continue
condition:
    patterns:
        %player% is (pressing|pushing|holding) (right|d) [key]
        %player% has (right|d) [key] (pressed|pushed|held)
    check:
        if metadata value "_input.right" of expr-1 is true:
            continue

import:
    org.bukkit.event.player.PlayerInputEvent

on PlayerInputEvent:
    set {_p} to event.getPlayer()
    set {_input} to event.getInput()
    set {_event-values::player} to {_p}
    if {_input}.isJump() isn't metadata value "_input.jump" of {_p}:
        {_input}.isJump() is true
        call custom event "input.jump" using event-values {_event-values::*}
    if {_input}.isSneak() isn't metadata value "_input.sneak" of {_p}:
        {_input}.isSneak() is true
        call custom event "input.sneak" using event-values {_event-values::*}
    if {_input}.isSprint() isn't metadata value "_input.sprint" of {_p}:
        {_input}.isSprint() is true
        call custom event "input.sprint" using event-values {_event-values::*}
    if {_input}.isForward() isn't metadata value "_input.forward" of {_p}:
        {_input}.isForward() is true
        call custom event "input.forward" using event-values {_event-values::*}
    if {_input}.isBackward() isn't metadata value "_input.backward" of {_p}:
        {_input}.isBackward() is true
        call custom event "input.backward" using event-values {_event-values::*}
    if {_input}.isLeft() isn't metadata value "_input.left" of {_p}:
        {_input}.isLeft() is true
        call custom event "input.left" using event-values {_event-values::*}
    if {_input}.isRight() isn't metadata value "_input.right" of {_p}:
        {_input}.isRight() is true
        call custom event "input.right" using event-values {_event-values::*}
    set metadata value "_input.jump" of {_p} to {_input}.isJump()
    set metadata value "_input.sneak" of {_p} to {_input}.isSneak()
    set metadata value "_input.sprint" of {_p} to {_input}.isSprint()
    set metadata value "_input.forward" of {_p} to {_input}.isForward()
    set metadata value "_input.backward" of {_p} to {_input}.isBackward()
    set metadata value "_input.left" of {_p} to {_input}.isLeft()
    set metadata value "_input.right" of {_p} to {_input}.isRight()
