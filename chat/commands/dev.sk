
options:
    allComponents: "attribute_modifiers", "banner_patterns", "base_color", "bees", "block_entity_data", "block_state", "bucket_entity_data", "bundle_contents", "can_break", "can_place_on", "charged_projectiles", "consumable", "container", "container_loot", "custom_data", "custom_model_data", "custom_name", "damage", "damage_resistant", "debug_stick_state", "death_protection", "dyed_color", "enchantable", "enchantment_glint_override", "enchantments", "entity_data", "equippable", "firework_explosion", "fireworks", "food", "glider", "hide_additional_tooltip", "hide_tooltip", "instrument", "intangible_projectile", "item_model", "item_name", "jukebox_playable", "lock", "lodestone_tracker", "lore", "map_color", "map_decorations", "map_id", "max_damage", "max_stack_size", "note_block_sound", "ominous_bottle_amplifier", "pot_decorations", "potion_contents", "profile", "rarity", "recipes", "repairable", "repair_cost", "stored_enchantments", "suspicious_stew_effects", "tool", "tooltip_style", "trim", "unbreakable", "use_cooldown", "use_remainder", "writable_book_content", "written_book_content"

brig command /turtle:nbt:
    permission: op
    arguments:
        register optional literal arg "mode" using ("components", "vanilla", "full", "custom")
        register optional greedystring arg "path" using ({@allComponents}, "id", "count", "components")
    trigger:
        if player's tool is air:
            send "§cFound no elements" to player
            stop
        set {_mode} to "components" if {_mode} isn't set
        if {_mode} is "components":
            set {_nbt} to (nbt of player's tool)
        else if {_mode} is "vanilla":
            set {_nbt} to (vanilla nbt of player's tool)
        else if {_mode} is "full":
            set {_nbt} to (full nbt of player's tool)
        else if {_mode} is "custom":
            set {_nbt} to (custom nbt of player's tool)
        if {_path} isn't set:
            send pretty nbt of {_nbt} to player
        else:
            set {_ogpath} to {_path}
            replace "." with ";" in {_path}
            set {_tag} to ((tag type of tag {_path} of nbt of tool) {_path} of {_nbt})
            if {_tag} isn't set:
                set {_path} to "minecraft:%{_path}%"
                set {_tag} to ((tag type of tag {_path} of nbt of tool) {_path} of {_nbt})
            if {_tag} is set:
                if {_tag} is an nbt compound:
                    send pretty nbt of {_tag} to player
                else:
                    send {_tag} to player
            else:
                send "§cFound no elements matching %{_ogpath}%" to player
                stop

# reload last script
on command:
    set {_args::*} to full command split at " "
    # check if ran /sk reload
    {_args::1} is "skript:skript", "skript", "skript:sk", or "sk"
    {_args::2} is "reload"
    # get reloaded script (if any)
    set {_script} to (join (elements from 3 to max(3, size of {_args::*}) of {_args::*}) with " ")
    if {_script} is set:
        # save reloaded script
        if event-commandsender is console:
            set {-lastReloadedScript::console} to {_script}
        else:
            set {-lastReloadedScript::%player%} to {_script}
    else:
        # reload last saved script (if set)
        set {_script} to {-lastReloadedScript::console} if (event-commandsender is console) else {-lastReloadedScript::%player%}
        {_script} is set
        cancel event
        set {_command} to "/sk reload %{_script}%"
        if event-commandsender is console:
            execute console command {_command}
        else:
            make player say {_command}
