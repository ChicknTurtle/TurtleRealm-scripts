
import:
    java.util.Arrays
    net.minecraft.network.protocol.game.ClientboundSetEntityDataPacket
    net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket
    net.minecraft.network.syncher.SynchedEntityData
    net.minecraft.network.syncher.EntityDataAccessor
    net.minecraft.network.syncher.EntityDataSerializers

# Clientside glow
effect:
    patterns:
        make %entities% [client[side]] glow %color% (for|to) %players%
        [client[side]] glow %entities% %color% (for|to) %players%
        make %entities% stop [client[side]] glowing (for|to) %players%
    trigger:
        set {_color} to expr-2
        set {_players::*} to expr-3
        loop indexes of {_players::*}:
            set {_players::%loop-value%} to {_players::%loop-value%}.getHandle()
        set {_entities::*} to expr-1
        loop indexes of {_entities::*}:
            set {_entities::%loop-value%} to {_entities::%loop-value%}.getHandle()

        loop {_entities::*}:
            set {_entity} to loop-value
            set {_entityData} to {_entity}.getEntityData()
            if matched pattern is 3:
                # stop glow
                set {_dataList} to Arrays.asList(new SynchedEntityData.DataValue(0, EntityDataSerializers.BYTE, 0.byteValue()))
            else:
                # set glow
                set {_dataList} to Arrays.asList(new SynchedEntityData.DataValue(0, EntityDataSerializers.BYTE, 64.byteValue()))
            # send packet
            set {_packet} to new ClientboundSetEntityDataPacket({_entity}.getId(), {_dataList})
            loop {_players::*}:
                loop-value-2.connection.sendPacket({_packet})
