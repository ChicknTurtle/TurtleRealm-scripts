
options:
    # vanilla brew time: 400t (20s)
    newBrewTime: 200

# Shorter brew time
import:
    org.bukkit.event.block.BrewingStartEvent
on BrewingStartEvent:
    # faster brew time
    set {_brewTime} to {@newBrewTime}

    # disable certain recipes
    if event.getSource() is turtle helmet:
        set {_brewTime} to 2147483647

    event.setRecipeBrewTime({_brewTime})
    event.setBrewingTime({_brewTime})
    
# It is assumed all potions are defined like so, where 'namespace'
# is your namespace and 'effect' is the effect id:
#  namespace:effect_potion
#  namespace:long_effect_potion
#  namespace:strong_splash_effect_potion
#  namespace:lingering_effect_potion
# etc.

when ready to load recipes:
    # turtle master
    addVanillaStartMix("minecraft", "turtle_master", getItem(turtle scute))
    # haste
    addStartMix("turtle", "haste", getItem(armadillo scute))
    addConversionMixes("turtle", "haste")
    addUpgradeMixes("turtle", "haste")
    # mining fatigue
    addCorruptMixes("turtle", "mining_fatigue", "haste")
    addConversionMixes("turtle", "mining_fatigue")
    addUpgradeMixes("turtle", "mining_fatigue")
    # levitation
    addCorruptMixesFromVanilla("turtle", "levitation", "slow_falling", true, false)
    addConversionMixes("turtle", "levitation")
    addUpgradeMixes("turtle", "levitation")
    # blindness
    addCorruptMixesFromVanilla("turtle", "blindness", "night_vision", true, false)
    addConversionMixes("turtle", "blindness", true, false)
    addUpgradeMixes("turtle", "blindness", true, false)
    # glowing
    addStartMix("turtle", "glowing", getItem(glowstone block))
    addConversionMixes("turtle", "glowing", true, false)
    addUpgradeMixes("turtle", "glowing", true, false)
    # invis
    addCorruptMixesToVanilla("turtle", "glowing", "invisibility", true, false)
    # wither
    addStartMix("turtle", "wither", getItem(wither rose))
    addConversionMixes("turtle", "wither")
    addUpgradeMixes("turtle", "wither")

# Potion functions
local function addMix(id:string, input:item, ingredient:item, result:item):
    register brewing recipe:
        id: {_id}
        input: {_input}
        ingredient: {_ingredient}
        result: {_result}

local function addStartMix(namespace:string, effect:string, ingredient:item):
    addMix("%{_namespace}%:mundane_potion_from_%{_effect}%", getItem(water bottle), {_ingredient}, getItem(mundane potion))
    addMix("%{_namespace}%:%{_effect}%_potion_start", getItem(awkward potion), {_ingredient}, getItem("%{_namespace}%:%{_effect}%_potion"))
    addMix("%{_namespace}%:splash_%{_effect}%_potion_start", getItem(awkward splash potion), {_ingredient}, getItem("%{_namespace}%:splash_%{_effect}%_potion"))
    addMix("%{_namespace}%:lingering_%{_effect}%_potion_start", getItem(awkward lingering potion), {_ingredient}, getItem("%{_namespace}%:lingering_%{_effect}%_potion"))

local function addVanillaStartMix(namespace:string, effect:string, ingredient:item):
    set {_effect_nbt} to "{""minecraft:potion_contents"":{potion:""minecraft:%{_effect}%""}}"
    addMix("%{_namespace}%:mundane_potion_from_%{_effect}%", getItem(water bottle), {_ingredient}, getItem(mundane potion))
    addMix("%{_namespace}%:%{_effect}%_potion_start", getItem(awkward potion), {_ingredient}, getItem(potion with nbt from {_effect_nbt}))
    addMix("%{_namespace}%:splash_%{_effect}%_potion_start", getItem(awkward splash potion), {_ingredient}, getItem(splash potion with nbt from {_effect_nbt}))
    addMix("%{_namespace}%:lingering_%{_effect}%_potion_start", getItem(awkward lingering potion), {_ingredient}, getItem(lingering potion with nbt from {_effect_nbt}))

local function addCorruptMixes(namespace:string, effect:string, fromeffect:string, long:boolean=true, strong:boolean=true):
    set {_spidereye} to getItem(fermented spider eye)
    addMix("%{_namespace}%:%{_effect}%_potion_corrupt", getItem("%{_namespace}%:%{_fromeffect}%_potion"), {_spidereye}, getItem("%{_namespace}%:%{_effect}%_potion"))
    addMix("%{_namespace}%:splash_%{_effect}%_potion_corrupt", getItem("%{_namespace}%:splash_%{_fromeffect}%_potion"), {_spidereye}, getItem("%{_namespace}%:splash_%{_effect}%_potion"))
    addMix("%{_namespace}%:lingering_%{_effect}%_potion_corrupt", getItem("%{_namespace}%:lingering_%{_fromeffect}%_potion"), {_spidereye}, getItem("%{_namespace}%:lingering_%{_effect}%_potion"))
    if {_long} is true:
        addMix("%{_namespace}%:long_%{_effect}%_potion_corrupt", getItem("%{_namespace}%:long_%{_fromeffect}%_potion"), {_spidereye}, getItem("%{_namespace}%:long_%{_effect}%_potion"))
        addMix("%{_namespace}%:long_splash_%{_effect}%_potion_corrupt", getItem("%{_namespace}%:long_splash_%{_fromeffect}%_potion"), {_spidereye}, getItem("%{_namespace}%:long_splash_%{_effect}%_potion"))
        addMix("%{_namespace}%:long_lingering_%{_effect}%_potion_corrupt", getItem("%{_namespace}%:long_lingering_%{_fromeffect}%_potion"), {_spidereye}, getItem("%{_namespace}%:long_lingering_%{_effect}%_potion"))
    if {_strong} is true:
        addMix("%{_namespace}%:strong_%{_effect}%_potion_corrupt", getItem("%{_namespace}%:strong_%{_fromeffect}%_potion"), {_spidereye}, getItem("%{_namespace}%:strong_%{_effect}%_potion"))
        addMix("%{_namespace}%:strong_splash_%{_effect}%_potion_corrupt", getItem("%{_namespace}%:strong_splash_%{_fromeffect}%_potion"), {_spidereye}, getItem("%{_namespace}%:strong_splash_%{_effect}%_potion"))
        addMix("%{_namespace}%:strong_lingering_%{_effect}%_potion_corrupt", getItem("%{_namespace}%:strong_lingering_%{_fromeffect}%_potion"), {_spidereye}, getItem("%{_namespace}%:strong_lingering_%{_effect}%_potion"))

local function addCorruptMixesFromVanilla(namespace:string, effect:string, fromeffect:string, long:boolean=true, strong:boolean=true):
    set {_spidereye} to getItem(fermented spider eye)
    set {_from_nbt_normal} to "{""minecraft:potion_contents"":{potion:""minecraft:%{_fromeffect}%""}}"
    set {_from_nbt_long} to "{""minecraft:potion_contents"":{potion:""minecraft:long_%{_fromeffect}%""}}"
    set {_from_nbt_strong} to "{""minecraft:potion_contents"":{potion:""minecraft:strong_%{_fromeffect}%""}}"
    addMix("%{_namespace}%:%{_effect}%_potion_corrupt", getItem(potion with nbt from {_from_nbt_normal}), {_spidereye}, getItem("%{_namespace}%:%{_effect}%_potion"))
    addMix("%{_namespace}%:splash_%{_effect}%_potion_corrupt", getItem(splash potion with nbt from {_from_nbt_normal}), {_spidereye}, getItem("%{_namespace}%:splash_%{_effect}%_potion"))
    addMix("%{_namespace}%:lingering_%{_effect}%_potion_corrupt", getItem(lingering potion with nbt from {_from_nbt_normal}), {_spidereye}, getItem("%{_namespace}%:lingering_%{_effect}%_potion"))
    if {_long} is true:
        addMix("%{_namespace}%:long_%{_effect}%_potion_corrupt", getItem(potion with nbt from {_from_nbt_long}), {_spidereye}, getItem("%{_namespace}%:long_%{_effect}%_potion"))
        addMix("%{_namespace}%:long_splash_%{_effect}%_potion_corrupt", getItem(splash potion with nbt from {_from_nbt_long}), {_spidereye}, getItem("%{_namespace}%:long_splash_%{_effect}%_potion"))
        addMix("%{_namespace}%:long_lingering_%{_effect}%_potion_corrupt", getItem(lingering potion with nbt from {_from_nbt_long}), {_spidereye}, getItem("%{_namespace}%:long_lingering_%{_effect}%_potion"))
    if {_strong} is true:
        addMix("%{_namespace}%:strong_%{_effect}%_potion_corrupt", getItem(potion with nbt from {_from_nbt_strong}), {_spidereye}, getItem("%{_namespace}%:strong_%{_effect}%_potion"))
        addMix("%{_namespace}%:strong_splash_%{_effect}%_potion_corrupt", getItem(splash potion with nbt from {_from_nbt_strong}), {_spidereye}, getItem("%{_namespace}%:strong_splash_%{_effect}%_potion"))
        addMix("%{_namespace}%:strong_lingering_%{_effect}%_potion_corrupt", getItem(lingering potion with nbt from {_from_nbt_strong}), {_spidereye}, getItem("%{_namespace}%:strong_lingering_%{_effect}%_potion"))

local function addCorruptMixesToVanilla(namespace:string, effect:string, toeffect:string, long:boolean=true, strong:boolean=true):
    set {_spidereye} to getItem(fermented spider eye)
    set {_to_nbt_normal} to "{""minecraft:potion_contents"":{potion:""minecraft:%{_toeffect}%""}}"
    set {_to_nbt_long} to "{""minecraft:potion_contents"":{potion:""minecraft:long_%{_toeffect}%""}}"
    set {_to_nbt_strong} to "{""minecraft:potion_contents"":{potion:""minecraft:strong_%{_toeffect}%""}}"
    addMix("minecraft:%{_toeffect}%_potion_corrupt", getItem("%{_namespace}%:%{_effect}%_potion"), {_spidereye}, getItem(potion with nbt from {_to_nbt_normal}))
    addMix("minecraft:splash_%{_toeffect}%_potion_corrupt", getItem("%{_namespace}%:splash_%{_effect}%_potion"), {_spidereye}, getItem(splash potion with nbt from {_to_nbt_normal}))
    addMix("minecraft:lingering_%{_toeffect}%_potion_corrupt", getItem("%{_namespace}%:lingering_%{_effect}%_potion"), {_spidereye}, getItem(lingering potion with nbt from {_to_nbt_normal}))
    if {_long} is true:
        addMix("minecraft:long_%{_toeffect}%_potion_corrupt", getItem("%{_namespace}%:long_%{_effect}%_potion"), {_spidereye}, getItem(potion with nbt from {_to_nbt_long}))
        addMix("minecraft:long_splash_%{_toeffect}%_potion_corrupt", getItem("%{_namespace}%:long_splash_%{_effect}%_potion"), {_spidereye}, getItem(splash potion with nbt from {_to_nbt_long}))
        addMix("minecraft:long_lingering_%{_toeffect}%_potion_corrupt", getItem("%{_namespace}%:long_lingering_%{_effect}%_potion"), {_spidereye}, getItem(lingering potion with nbt from {_to_nbt_long}))
    if {_strong} is true:
        addMix("minecraft:strong_%{_toeffect}%_potion_corrupt", getItem("%{_namespace}%:strong_%{_effect}%_potion"), {_spidereye}, getItem(potion with nbt from {_to_nbt_strong}))
        addMix("minecraft:strong_splash_%{_toeffect}%_potion_corrupt", getItem("%{_namespace}%:strong_splash_%{_effect}%_potion"), {_spidereye}, getItem(splash potion with nbt from {_to_nbt_strong}))
        addMix("minecraft:strong_lingering_%{_toeffect}%_potion_corrupt", getItem("%{_namespace}%:strong_lingering_%{_effect}%_potion"), {_spidereye}, getItem(lingering potion with nbt from {_to_nbt_strong}))

local function addConversionMixes(namespace:string, effect:string, long:boolean=true, strong:boolean=true):
    set {_gunpowder} to getItem(gunpowder)
    set {_dragonbreath} to getItem(dragon breath)
    addMix("%{_namespace}%:splash_%{_effect}%_potion", getItem("%{_namespace}%:%{_effect}%_potion"), {_gunpowder}, getItem("%{_namespace}%:splash_%{_effect}%_potion"))
    addMix("%{_namespace}%:lingering_%{_effect}%_potion", getItem("%{_namespace}%:splash_%{_effect}%_potion"), {_dragonbreath}, getItem("%{_namespace}%:lingering_%{_effect}%_potion"))
    if {_long} is true:
        addMix("%{_namespace}%:long_splash_%{_effect}%_potion", getItem("%{_namespace}%:long_%{_effect}%_potion"), {_gunpowder}, getItem("%{_namespace}%:long_splash_%{_effect}%_potion"))
        addMix("%{_namespace}%:long_lingering_%{_effect}%_potion", getItem("%{_namespace}%:long_splash_%{_effect}%_potion"), {_dragonbreath}, getItem("%{_namespace}%:long_lingering_%{_effect}%_potion"))
    if {_strong} is true:
        addMix("%{_namespace}%:strong_splash_%{_effect}%_potion", getItem("%{_namespace}%:strong_%{_effect}%_potion"), {_gunpowder}, getItem("%{_namespace}%:strong_splash_%{_effect}%_potion"))
        addMix("%{_namespace}%:strong_lingering_%{_effect}%_potion", getItem("%{_namespace}%:strong_splash_%{_effect}%_potion"), {_dragonbreath}, getItem("%{_namespace}%:strong_lingering_%{_effect}%_potion"))

local function addUpgradeMixes(namespace:string, effect:string, long:boolean=true, strong:boolean=true):
    set {_redstone} to getItem(redstone)
    set {_glowstone} to getItem(glowstone dust)
    if {_long} is true:
        addMix("%{_namespace}%:long_%{_effect}%_potion_upgrade", getItem("%{_namespace}%:%{_effect}%_potion"), {_redstone}, getItem("%{_namespace}%:long_%{_effect}%_potion"))
        addMix("%{_namespace}%:long_splash_%{_effect}%_potion_upgrade", getItem("%{_namespace}%:splash_%{_effect}%_potion"), {_redstone}, getItem("%{_namespace}%:long_splash_%{_effect}%_potion"))
        addMix("%{_namespace}%:long_lingering_%{_effect}%_potion_upgrade", getItem("%{_namespace}%:lingering_%{_effect}%_potion"), {_redstone}, getItem("%{_namespace}%:long_lingering_%{_effect}%_potion"))
    if {_strong} is true:
        addMix("%{_namespace}%:strong_%{_effect}%_potion_upgrade", getItem("%{_namespace}%:%{_effect}%_potion"), {_glowstone}, getItem("%{_namespace}%:strong_%{_effect}%_potion"))
        addMix("%{_namespace}%:strong_splash_%{_effect}%_potion_upgrade", getItem("%{_namespace}%:splash_%{_effect}%_potion"), {_glowstone}, getItem("%{_namespace}%:strong_splash_%{_effect}%_potion"))
        addMix("%{_namespace}%:strong_lingering_%{_effect}%_potion_upgrade", getItem("%{_namespace}%:lingering_%{_effect}%_potion"), {_glowstone}, getItem("%{_namespace}%:strong_lingering_%{_effect}%_potion"))
