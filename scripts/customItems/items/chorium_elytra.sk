
when ready to load recipes:
    register shaped recipe:
        id: "turtle:chorium_upgrade_smithing_template"
        result: 2 of getItem("turtle:chorium_upgrade_smithing_template")
        category: "misc"
        shape: "#S#", "#C#", "###"
        ingredients:
            set ingredient of "#" to diamond
            set ingredient of "C" to end stone
            set ingredient of "S" to getItem("turtle:chorium_upgrade_smithing_template")
    register smithing transform recipe:
        id: "turtle:chorium_elytra_smithing"
        result: getItem("turtle:chorium_elytra")
        template: getItem("turtle:chorium_upgrade_smithing_template")
        base: elytra
        addition: getItem("turtle:chorium_ingot")

on toggle gliding:
    wait 1 tick
    while player is gliding:
        wait 1 tick
        getId(player's chestplate) is "turtle:chorium_elytra"
        set {_speed} to (vector length of (player's velocity))
        {_speed} > 0.8
        set {_loc} to (location 1 block in front of player)
        set {_loc} to {_loc} ~ vector(0,0.5,0)
        set {_leftwing} to (location 1.25 blocks left of {_loc})
        set {_rightwing} to (location 1.25 blocks right of {_loc})
        make 1 of witch at {_leftwing} with extra 0 with force
        make 1 of witch at {_rightwing} with extra 0 with force
        set {_e::*} to (entities in radius 2.5 of player)
        set {_e::*} to ({_e::*} where [input isn't player])
        set {_source} to (damage source of player_attack caused by player directly by player at player)
        damage {_e::*} by (3.5*{_speed}) with {_source}
        loop {_e::*}:
            set {_kb} to ({_speed}*(1-(knockback resistance attribute of loop-value)))
            push loop-value (player's velocity) with force {_kb}
            if loop-value is ("end crystal" parsed as entity type):
                make player attack loop-value
